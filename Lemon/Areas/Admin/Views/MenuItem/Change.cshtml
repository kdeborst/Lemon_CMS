@model Lemon.Models.ViewModels.MenuItemViewModel
@using Lemon.Extensions

@{
    ViewData["Title"] = "Menu & Food Item Wijzigen";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<form method="post" enctype="multipart/form-data" asp-action="Change">
    <div class="border white-background row">
        <div class="col-8">
            <h2 class="text-warning">Menu & Food Item Wijzigen</h2>
            <br />
            <input type="hidden" asp-for="MenuItem.Id" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group row">
                <div class="col-2">
                    <label class="col-form-label" asp-for="MenuItem.Name"></label>
                </div>
                <div class="col-8 ">
                    <input class="form-control" asp-for="MenuItem.Name" />
                </div>
                <span class="text-danger" asp-validation-for="MenuItem.Name"></span>
            </div>
            <div class="form-group row">
                <div class="col-2">
                    <label class="col-form-label" asp-for="MenuItem.Description"></label>
                </div>
                <div class="col-8 ">
                    @Html.TextAreaFor(m => m.MenuItem.Description)
                </div>
                <span class="text-danger" asp-validation-for="MenuItem.Description"></span>
            </div>
            <div class="form-group row">
                <div class="col-2">
                    <label class="col-form-label" asp-for="MenuItem.Price"></label>
                </div>
                <div class="col-8 ">
                    <input class="form-control" asp-for="MenuItem.Price" />
                </div>
                <span class="text-danger" asp-validation-for="MenuItem.Price"></span>
            </div>
            <div class="form-group row">
                <div class="col-2">
                    <label class="col-form-label" asp-for="MenuItem.Image"></label>
                </div>
                <div class="col-8 ">
                    <input type="file" name="files" multiple class="form-control" />
                </div>
            </div>
            <div class="form-group row">
                <div class="col-2">
                    <label class="col-form-label" asp-for="MenuItem.CategoryId"></label>
                </div>
                <div class="col-8 ">
                    <select asp-for="@Model.MenuItem.CategoryId" id="CategoryId" asp-items="Model.Category.ToSelectListItem(Model.MenuItem.CategoryId)" class="form-control"></select>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-2">
                    <label class="col-form-label" asp-for="MenuItem.SubCategoryId"></label>
                </div>
                <div class="col-8 ">
                    <select asp-for="@Model.MenuItem.SubCategoryId" id="SubCategoryId" name="SubCategoryId" asp-items="@(new SelectList(string.Empty,"Id","Name"))" class="form-control"></select>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-2">
                    <label class="col-form-label" asp-for="MenuItem.Spiciness"></label>
                </div>
                <div class="col-8 ">
                    <select asp-for="MenuItem.Spiciness" asp-items="Html.GetEnumSelectList<MenuItem.ESpicinessScale>()" class="form-control"></select>
                </div>
            </div>
        </div>
        <div class="col-3 ">
            <h2 class="text-warning">Afbeelding Gerecht</h2>
            <br />
            <img src="@Model.MenuItem.Image" style="border-radius: 5px; width: 100%; border: 1px solid #bbb9b9" />
        </div>
        <div class="col-8">
            <div class="col-8 offset-2">
                <partial name="_ChangeOrBackButtonPartial" model="Model.MenuItem.Id" />
            </div>
        </div>
    </div>
</form>


@section Scripts{
    
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: "lists",
            menubar: 'edit format'
        });
    </script>

    <script>
        $(document).ready(function () {

            getSubCategory();
            $('#CategoryId').change(function() {
                getSubCategory();
            });

        });
        
        function getSubCategory() {

            var url = '@Url.Content("~/")' + "Admin/SubCategory/GetSubCategory";
            var ddlsource = '#CategoryId';

            $.getJSON(url, { id: $(ddlsource).val() }, function (data) {

                var items = '';
                $('#SubCategoryId').empty();

                $.each(data, function (i, subcategory) {
                    items += "<option value='" + subcategory.value + "'>" + subcategory.text + "</option>";
                });

                $('#SubCategoryId').html(items);
            });
        }

    </script>
}